<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_follower">
<title>Follower class Reference</title>
<para>
    <programlisting>#include <link linkend="follower_8h">&lt;follower.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for Follower</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_follower__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for Follower</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_follower__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Public Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::array&lt; int, 4 &gt; m_fid</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::array&lt; std::array&lt; double, 2 &gt;, 4 &gt; m_posit</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_follower_1a6870e654b7cc901944ead12870a6b107">Follower</link> (
ros::NodeHandle * nodehandle, const std::string &amp; robot_name)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_follower_1ae9e1df72904d2171d99f7bd18ccd89ab">publish_velocities</link> (
const geometry_msgs::Twist &amp; msg)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_follower_1a0af597b7d7f416c37d85be69377d0b58">drive_straight</link> (
double distance, bool direction)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_follower_1ae241d3dc81b6ddebdfbede88e2cebb98">rotate</link> (
double angle_to_rotate, bool direction, double final_angle)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual bool <link linkend="class_follower_1ab4e7d953f54be23aadd7ed081d01ea2c">go_to_goal</link> (
double x, double y)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_follower_1a098544bd512f5d5b054e15d173cec066">stop</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_follower_1ab87e93b6fafa6f25137ba60d5860558e">compute_expected_final_yaw</link> (
bool direction, double angle_to_rotate)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_follower_1a300c727aa90274ffa63a2fb9a6403054">compute_yaw_deg</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_follower_1a09782942c6aeb9c1797931eb42bc9d20">compute_yaw_rad</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_follower_1a8d6f37307eb0693f9ca04d31ccfe75ae">convert_rad_to_deg</link> (
double angle)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Public Inheritance Child class of Bot_controller Class to go to ArUco markers found by <link linkend="class_explorer">Explorer</link> child. </para>
    </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_follower_1a6870e654b7cc901944ead12870a6b107">
                <title>Follower::Follower (ros::NodeHandle *nodehandle, const std::string &amp;robot_name)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1ae9e1df72904d2171d99f7bd18ccd89ab">
                <title>virtual void Follower::publish_velocities (const geometry_msgs::Twist &amp;msg) override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1a0af597b7d7f416c37d85be69377d0b58">
                <title>virtual void Follower::drive_straight (double distance, bool direction) override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1ae241d3dc81b6ddebdfbede88e2cebb98">
                <title>virtual void Follower::rotate (double angle_to_rotate, bool direction, double final_angle) override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1ab4e7d953f54be23aadd7ed081d01ea2c">
                <title>virtual bool Follower::go_to_goal (double x, double y) override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1a098544bd512f5d5b054e15d173cec066">
                <title>virtual void Follower::stop () override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1ab87e93b6fafa6f25137ba60d5860558e">
                <title>virtual double Follower::compute_expected_final_yaw (bool direction, double angle_to_rotate) override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1a300c727aa90274ffa63a2fb9a6403054">
                <title>virtual double Follower::compute_yaw_deg () override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1a09782942c6aeb9c1797931eb42bc9d20">
                <title>virtual double Follower::compute_yaw_rad () override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_follower_1a8d6f37307eb0693f9ca04d31ccfe75ae">
                <title>virtual double Follower::convert_rad_to_deg (double angle) override</title> <emphasis></emphasis>
                
            </section>
</section>
